{"version":3,"sources":["context/site.js","components/hooks/form-hook.js","components/todo/form.js","components/todo/pagination.js","components/todo/list.js","components/todo/settings.js","components/hooks/ajax-hook.js","components/hooks/todo-api-hook.js","components/todo/todo-connected.js","app.js","index.js"],"names":["SettingsContext","React","createContext","SettingsProvider","props","useState","completed","setCompleted","displayCount","setDisplayCount","sortField","setSortField","state","totalTasks","toggleShowCompleted","prevCompleted","setTotalTasks","Provider","value","children","useForm","callback","item","setItem","e","persist","target","name","preventDefault","reset","TodoForm","handleSubmit","handleChange","Form","onSubmit","Group","Label","Control","placeholder","onChange","required","defaultValue","type","min","max","Button","variant","Pagination","tasksPerPage","paginate","pageNumbers","i","Math","ceil","push","className","map","number","key","onClick","href","TodoList","context","useContext","currentPage","setCurrentPage","list","sort","a","b","assignee","toUpperCase","difficulty","text","filter","complete","indexOfLastTask","indexOfFirstTask","currentposts","slice","length","toString","_id","Toast","Header","closeButton","Badge","handleDelete","Body","handleComplete","pageNumber","ListSettings","htmlFor","useAjax","isLoading","setIsLoading","response","setResponse","error","setError","url","method","body","axios","headers","data","then","axiosResponse","catch","axiosError","finally","BASE_URL","useTodoApi","request","updateResponse","updateError","updateRequest","getTodoItems","useEffect","id","ToDo","addItem","deleteItem","toggleComplete","App","Navbar","bg","Brand","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.45f6bbd5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction SettingsProvider(props) {\n  const [completed, setCompleted] = useState(true);\n  const [displayCount, setDisplayCount] = useState(5);\n  const [sortField, setSortField] = useState('name');\n  const [totalTasks, setTotalTasks] = useState(0);\n\n  const toggleShowCompleted = () => setCompleted(prevCompleted => !prevCompleted);\n\n  const state = {\n    completed,\n    displayCount,\n    sortField,\n    totalTasks,\n    toggleShowCompleted,\n    setDisplayCount,\n    setSortField,\n    setTotalTasks\n  }\n\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  )\n}\nexport default SettingsProvider;","import { useState } from 'react';\n\n// must stick to \"use\" convention for custom hooks\nconst useForm = (callback) => {\n\n  // this will collect form values\n  const [item, setItem] = useState({});\n\n  const handleSubmit = (e) => {\n    e.persist();\n    e.preventDefault();\n    e.target.reset();\n\n    const newItem = {};\n    setItem(newItem);\n    callback(item);\n  }\n\n  const handleChange = (e) => {\n    e.persist();\n    setItem({ ...item, [e.target.name]: e.target.value });\n  }\n\n  return [\n    handleChange,\n    handleSubmit,\n  ]\n}\n\nexport default useForm;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport useForm from '../hooks/form-hook';\n\n\nconst TodoForm = (props) => {\n\n  const [handleChange, handleSubmit] = useForm(submittor);\n\n  function submittor(item) {\n    props.handleSubmit(item);\n  }\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <h3>Add Item</h3>\n        <Form.Group>\n          <Form.Label>To Do Item</Form.Label>\n          <Form.Control\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleChange}\n            required={true}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Difficulty Rating</Form.Label>\n          <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Assigned To</Form.Label>\n          <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleChange} />\n        </Form.Group>\n        <Button variant=\"outline-dark\" type=\"submit\">Add Item</Button>\n      </Form>\n    </>\n  );\n}\n\n\nexport default TodoForm;\n","// Logic from https://www.youtube.com/watch?v=IYCa1F-OWmk\n\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst Pagination = ({ tasksPerPage, totalTasks, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalTasks / tasksPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map(number => (\n          <li key={number} className=\"page-item\">\n            <Button variant=\"outline-dark\" onClick={() => paginate(number)} href=\"#\">\n              {number}\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\nexport default Pagination;","import React, { useContext, useState } from 'react';\nimport { Badge, Button, Toast } from 'react-bootstrap';\nimport { SettingsContext } from '../../context/site';\nimport Pagination from './pagination';\n\nfunction TodoList(props) {\n  const context = useContext(SettingsContext);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let list = props.list;\n\n\n  // Sort params logic\n  if (context.sortField === 'name') {\n    list.sort((a, b) => {\n      if (a.assignee.toUpperCase() > b.assignee.toUpperCase()) return 1;\n      if (a.assignee.toUpperCase() < b.assignee.toUpperCase()) return -1;\n      return 0;\n    });\n  }\n  else if (context.sortField === 'difficulty') {\n    list.sort((a, b) => {\n      return a.difficulty - b.difficulty;\n    });\n  }\n  else if (context.sortField === 'task') {\n    list.sort((a, b) => {\n      if (a.text.toUpperCase() > b.text.toUpperCase()) return 1;\n      if (a.text.toUpperCase() < b.text.toUpperCase()) return -1;\n      return 0;\n    });\n  }\n\n  // Filter completed tasks\n  if (context.completed) {\n    list = list.filter(item => !item.complete);\n  }\n\n  // Get current posts (code from https://www.youtube.com/watch?v=IYCa1F-OWmk )\n  const indexOfLastTask = currentPage * context.displayCount;\n  const indexOfFirstTask = indexOfLastTask - context.displayCount;\n  const currentposts = list.slice(indexOfFirstTask, indexOfLastTask);\n  context.setTotalTasks(list.length);\n\n  // change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <section>\n      <ul>\n        {currentposts.map(item => (\n          <li\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <Toast>\n              <Toast.Header closeButton={false}>\n                <Badge className={item.complete ? \"completeBadge\" : \"pendingBadge\"}>\n                  {item.complete ? 'Complete' : 'Pending'}\n                </Badge>\n                <strong>{item.assignee}</strong>\n                <Button className=\"btn-close\" onClick={() => props.handleDelete(item._id)}>X</Button>\n              </Toast.Header>\n              <Toast.Body onClick={() => props.handleComplete(item)}>\n                <p>{item.text}</p>\n                <small>\n                  difficulty: {item.difficulty}\n                </small>\n              </Toast.Body>\n            </Toast>\n          </li>\n        ))}\n      </ul>\n      <div>\n        <Pagination\n          tasksPerPage={context.displayCount}\n          totalTasks={context.totalTasks}\n          paginate={paginate} />\n      </div>\n    </section>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { SettingsContext } from '../../context/site';\n\nfunction ListSettings(props) {\n  const context = useContext(SettingsContext);\n\n  return (\n    <section className=\"settings\">\n      <h4>Settings</h4>\n      <div>\n        <Button variant=\"outline-dark\" onClick={() => context.toggleShowCompleted()}>Toggle show completed</Button>\n      </div>\n      <div>\n        <label htmlFor=\"sortby\">sort by:</label>\n        <select name=\"sortby\" onChange={e => context.setSortField(e.target.value)}>\n          <option value=\"name\" >name</option>\n          <option value=\"difficulty\" >difficulty</option>\n          <option value=\"task\" >task</option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"displayNum\">display:</label>\n        <select name=\"displayNum\" onChange={e => context.setDisplayCount(e.target.value)}>\n          <option value=\"5\" >5</option>\n          <option value=\"10\" >10</option>\n          <option value=\"20\" >20</option>\n        </select>\n      </div>\n    </section>\n  )\n}\nexport default ListSettings;","import axios from 'axios';\nimport { useState } from 'react'\n\nconst useAjax = () => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  const request = (url, method, body = {}) => {\n    setIsLoading(true);\n    axios({\n      method: method,\n      url: url,\n      headers: { 'Content-Type': 'application/json' },\n      data: body\n    })\n    .then(axiosResponse => setResponse(axiosResponse.data))\n    .catch(axiosError => setError(axiosError))\n    .finally(() => setIsLoading(false));\n  };\n\n  return [isLoading, response, error, request];\n}\n\nexport default useAjax;","import { useEffect } from 'react';\nimport useAjax from './ajax-hook'\nconst BASE_URL = 'https://brsmith-api-server.herokuapp.com/todos';\n\nconst useTodoApi = () => {\n  const [isLoading, list,  , request] = useAjax();\n  const [ , updateResponse, updateError, updateRequest] = useAjax();\n\n  \n  const getTodoItems = () => {\n    request(BASE_URL, 'GET')\n  }\n  \n  const addItem = (item) => {\n    updateRequest(BASE_URL, 'POST', item);\n  }\n  \n  const deleteItem = (id) => {\n    const url = `${BASE_URL}/${id}`;\n    updateRequest(url, 'DELETE');\n  }\n  \n  const toggleComplete = (item) => {\n    item.complete = !item.complete;\n    const id = item._id;\n    const url = `${BASE_URL}/${id}`;\n    updateRequest(url, 'PUT', item);\n  }\n  \n  useEffect(getTodoItems, [updateResponse, updateError]);\n\n  return [isLoading, list === null ? [] : list, getTodoItems, addItem, deleteItem, toggleComplete];\n}\n\nexport default useTodoApi;\n","import React, { useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n// import useAjax from '../hooks/ajax-hook';\nimport ListSettings from './settings';\nimport useTodoApi from '../hooks/todo-api-hook.js';\n\n\nimport './todo.scss';\n\nconst ToDo = () => {\n\n  // const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo'; // class API\n  // const todoAPI = 'https://brsmith-api-server.herokuapp.com/todos'; // BRS API\n\n  const [ , list, getTodoItems, addItem, deleteItem, toggleComplete] = useTodoApi();\n  useEffect(getTodoItems, []);\n  \n  return (\n    <>\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </header>\n\n      <div>\n        <ListSettings />\n      </div>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={addItem} />\n        </div>\n        <div>\n          <TodoList\n            list={list}\n            handleDelete={deleteItem}\n            handleComplete={toggleComplete}\n          // handleUpdate={_updateItem}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport ToDo from './components/todo/todo-connected';\n\n\nfunction App() {\n  return (\n    <>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#\">Home</Navbar.Brand>\n      </Navbar>\n      <ToDo />\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport SettingsContext from './context/site.js';\nimport App from './app.js';\n\nfunction Main() {\n  return (\n    <SettingsContext>\n      <App />\n    </SettingsContext>\n  )\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}